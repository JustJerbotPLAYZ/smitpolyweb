// <auto-generated />
using System;
using Estrategy.SmitPolyweb.ClientPortal.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Estrategy.SmitPolyweb.ClientPortal.API.Migrations
{
    [DbContext(typeof(EstrategyPolywebDbContext))]
    [Migration("20241115104555_RemovePropList")]
    partial class RemovePropList
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Coupling.ArticleTypeProperty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ArticletypeID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.Property<bool>("Required")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Visable")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ID");

                    b.HasIndex("ArticletypeID");

                    b.HasIndex("PropertyID");

                    b.ToTable("ArticleTypeProperties");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Coupling.CertificateProperty", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CertificateID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("CertificateID");

                    b.HasIndex("PropertyID");

                    b.ToTable("CertificateProperties");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Address", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Addition")
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("HouseNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("StreetName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Article", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ArticleNumber")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ArticleTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ArticleNumber")
                        .IsUnique();

                    b.HasIndex("ArticleTypeID");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.ArticleType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("StandardPrice")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.ToTable("ArticleTypes");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Certificate", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<int>("ArticleID")
                        .HasColumnType("int");

                    b.Property<int>("ArticleTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CertificateTypeID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerReferenceNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CustomerSearchName")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("DateOfInspection")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DebtorNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("ExtraInfo")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SupplierID")
                        .HasColumnType("int");

                    b.Property<DateTime>("SupplyDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("WorkType")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.HasIndex("ArticleID");

                    b.HasIndex("ArticleTypeID");

                    b.HasIndex("CertificateTypeID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("SupplierID");

                    b.ToTable("Certificates");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.CertificateType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("CertificateTypes");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Checklist", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ChecklistFieldIDs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ChecklistPropertyIDs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Checklists");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.ChecklistField", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Checked")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("ChecklistID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ChecklistID");

                    b.ToTable("ChecklistFields");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<int>("CertificateEmailSettings")
                        .HasColumnType("int");

                    b.Property<int>("CertificateExpirationReminder")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("DebtorNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FaxNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("LogoID")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SalePercentage")
                        .HasColumnType("int");

                    b.Property<string>("SearchName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.HasIndex("LogoID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Logo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("FileDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("FileExtension")
                        .HasColumnType("longtext");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FilePath")
                        .HasColumnType("longtext");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Logos");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.PasswordHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("ActivationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("OldPasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("PasswordHistories");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Property", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("ChecklistID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FieldType")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("ChecklistID");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.PropertyChoise", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<int>("PropertyID")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("PropertyID");

                    b.ToTable("PropertyChoises");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.RefreshToken", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("OwnerID")
                        .HasColumnType("int");

                    b.Property<string>("RefreshTokenValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("TokenID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidUntill")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Role", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Supplier", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Ticket", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<int>("ArticleID")
                        .HasColumnType("int");

                    b.Property<int?>("CertificateID")
                        .HasColumnType("int");

                    b.Property<string>("Certificates")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerSearchName")
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("Scheduled")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("TicketNumber")
                        .HasColumnType("int");

                    b.Property<string>("UserFirstName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AddressID");

                    b.HasIndex("ArticleID");

                    b.HasIndex("CertificateID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("UserID");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Token", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("RefreshTokenID")
                        .HasColumnType("int");

                    b.Property<string>("TokenValue")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ValidUntill")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ID");

                    b.HasIndex("RefreshTokenID")
                        .IsUnique();

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("AccountActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("AccountBlocked")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Infix")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("PasswordHashType")
                        .HasColumnType("int");

                    b.Property<int?>("RefreshTokenID")
                        .HasColumnType("int");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RefreshTokenID")
                        .IsUnique();

                    b.HasIndex("RoleID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Coupling.ArticleTypeProperty", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.ArticleType", "ArticleType")
                        .WithMany()
                        .HasForeignKey("ArticletypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticleType");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Coupling.CertificateProperty", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Certificate", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Property", "Property")
                        .WithMany()
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Certificate");

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Article", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.ArticleType", "ArticleType")
                        .WithMany()
                        .HasForeignKey("ArticleTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArticleType");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Certificate", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.ArticleType", "ArticleType")
                        .WithMany()
                        .HasForeignKey("ArticleTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.CertificateType", "CertificateType")
                        .WithMany()
                        .HasForeignKey("CertificateTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Article");

                    b.Navigation("ArticleType");

                    b.Navigation("CertificateType");

                    b.Navigation("Customer");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.ChecklistField", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Checklist", null)
                        .WithMany("Fields")
                        .HasForeignKey("ChecklistID");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Customer", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Logo", "Logo")
                        .WithMany()
                        .HasForeignKey("LogoID");

                    b.Navigation("Address");

                    b.Navigation("Logo");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.PasswordHistory", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Property", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Checklist", null)
                        .WithMany("Properties")
                        .HasForeignKey("ChecklistID");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.PropertyChoise", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Property", "Property")
                        .WithMany("PropertyChoises")
                        .HasForeignKey("PropertyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Property");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Supplier", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Ticket", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Article", "Article")
                        .WithMany()
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Certificate", "Certificate")
                        .WithMany()
                        .HasForeignKey("CertificateID");

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Address");

                    b.Navigation("Article");

                    b.Navigation("Certificate");

                    b.Navigation("Customer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Token", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.RefreshToken", "RefreshToken")
                        .WithOne("Token")
                        .HasForeignKey("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Token", "RefreshTokenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RefreshToken");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.User", b =>
                {
                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerID");

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.RefreshToken", "RefreshToken")
                        .WithOne("Owner")
                        .HasForeignKey("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.User", "RefreshTokenID");

                    b.HasOne("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("RefreshToken");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Checklist", b =>
                {
                    b.Navigation("Fields");

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.Property", b =>
                {
                    b.Navigation("PropertyChoises");
                });

            modelBuilder.Entity("Estrategy.SmitPolyweb.ClientPortal.API.Models.Domain.RefreshToken", b =>
                {
                    b.Navigation("Owner")
                        .IsRequired();

                    b.Navigation("Token");
                });
#pragma warning restore 612, 618
        }
    }
}
